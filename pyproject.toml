[project]
name = "KnowledgeRetrievalReasoningSystem"
version = "0.0.1"
description = "An intelligent Multi-Agent System for Knowledge Retrieval and Reasoning in Education."
authors = [
    { name = "Sabin Pokharel", email = "savinpokharel@gmail.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "langgraph",
    "langchain-openai",
    "langchain-anthropic",
    "langchain",
    "langchain-fireworks",
    "python-dotenv",
    "langchain-elasticsearch",
    "langchain-pinecone",
    "msgspec",
    "langchain-mongodb",
    "langchain-cohere",
]

[project.optional-dependencies]
dev = ["mypy", "ruff"]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["langgraph.templates.retrieval_graph", "retrieval_graph"]
[tool.setuptools.package-dir]
"langgraph.templates.retrieval_graph" = "src/retrieval_graph"
"retrieval_graph" = "src/retrieval_graph"


[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"